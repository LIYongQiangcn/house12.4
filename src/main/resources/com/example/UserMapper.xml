<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.User">
        <id column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="headportrait" jdbcType="VARCHAR" property="headportrait"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
    </resultMap>
    <!--模糊查询-->
    <select id="queryByName"  parameterType="java.lang.String"  resultMap="BaseResultMap">
        select * from user
        where name LIKE "%"#{name}"%"
    </select>
    <select id="queryBySex"  parameterType="java.lang.String"  resultMap="BaseResultMap">
        select * from user
        where sex LIKE "%"#{sex}"%"
    </select>
    <select id="queryByPhone"  parameterType="java.lang.String"  resultMap="BaseResultMap">
        select * from user
        where phone LIKE "%"#{phone}"%"
    </select>

    <!--根据uid查询用户电话号码-->
    <select id="queryPhoneByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select phone
        from user
        where uid=#{uid}
    </select>

    <!--注册用户-->
    <insert id="insertUser" parameterType="com.example.entity.User">
        insert into user(name,phone,password,headportrait,birthday,sex,email)
        values (#{name},#{phone},#{password},#{headportrait},#{birthday},#{sex},#{email})
    </insert>

    <!--用户登录-->
    <select id="userlogin" parameterType="com.example.entity.User" resultMap="BaseResultMap">
        select *
        from user
        where phone= #{phone} and password= #{password}
    </select>

    <!--删除用户-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user
        where uid=#{uid}
    </delete>
    <delete id="deleteUsers" parameterType="map">
        delete from user
        where uid in
        <foreach item="uid" collection="list" open="(" close=")" separator=","></foreach>
        #{uid}
    </delete>

    <!--更新用户-->
    <update id="updateUserByUid" parameterType="com.example.entity.User">
        update user
        set name=#{name},phone=#{phone},password=#{password},
        birthday=#{birthday},sex=#{sex},email=#{email}
        where uid=#{uid}
    </update>
    <!--更新用户头像-->
    <update id="updateUserPorByUid" parameterType="com.example.entity.User">
        update user
        set headportrait=#{headportrait}
        where uid=#{uid}
    </update>

</mapper>